openapi: 3.0.0
info:
  title: solutionist
  description: solutionist desc
  version: '1.0.0'
servers:
  - url: 'http://localhost:4000'
  - url: 'https://solutionist.site'

tags:
  - name: users
    description: Operations about user
  - name: search && sets
    description: Operations about gathering
  - name: myInfo
paths:
  /users/signup:
    post:
      tags:
        - users
      summary: signup
      description: user signup
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - username
                - email
                - password
              example:
                username: messi
                email: messi@google.com
                password: 'messi'
        required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    default: successfully signed in
        '500':
          description: internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
  /users/login:
    post:
      tags:
        - users
      summary: login
      description: login
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
              example:
                email: messi@google.com
                password: 'messi'
        required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  profileImage:
                    type: string
                example:
                  id: 1
                  username: 'messi'
                  email: 'messi@google.com'
                  profileImage: 'http://image.com'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: invalid user
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
  /users/google:
    post:
      tags:
        - users
      summary: login google
      description: login google
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  profileImage:
                    type: string
                example:
                  id: 1
                  username: 'messi'
                  email: 'messi@google.com'
                  profileImage: 'http://image.com'

        '201':
          description: create
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  profileImage:
                    type: string
                example:
                  id: 1
                  username: 'messi'
                  email: 'messi@google.com'
                  profileImage: 'http://image.com'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
  /users/signout:
    delete:
      tags:
        - users
      summary: signout
      description: signout
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: successfully signed out
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
  /collections:
    post:
      tags:
        - search && sets
      summary: create set
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                problems:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: integer
                      question:
                        type: string
                      answer:
                        type: integer
                      explanation:
                        type: integer
                      isOX:
                        type: boolean
                choices:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: integer
                      content:
                        type: string
              required:
                - title
              example:
                title: easy questions
                description: very easy
                problems:
                  - index: 1
                    question: what is it
                    answer: 1
                    explanation: thats it
                    isOX: false
                    choices:
                      - index: 1
                        content: a
                      - index: 2
                        content: b
                  - index: 2
                    question: what is it
                    answer: 1
                    explanation: thats it
                    isOX: false
                    choices:
                      - index: 1
                        content: a
                      - index: 2
                        content: b
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  username:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
                example:
                  title: easy questions
                  username: kimcoding
                  createdAt: 2021-12-18 22:51:20
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: insufficient information
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
  /sets:
    post:
      tags:
        - search && sets
      summary: modify set
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                collectionId:
                  type: number
                title:
                  type: string
                description:
                  type: string
                problems:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: integer
                      question:
                        type: string
                      answer:
                        type: integer
                      explanation:
                        type: integer
                      isOX:
                        type: boolean
                choices:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: integer
                      content:
                        type: string
              required:
                - collectionId
                - title
              example:
                collectionId: 20
                title: easy questions
                description: very easy
                problems:
                  - index: 1
                    question: what is it
                    answer: 1
                    explanation: thats it
                    isOX: false
                    choices:
                      - index: 1
                        content: a
                      - index: 2
                        content: b
                  - index: 2
                    question: what is it
                    answer: 1
                    explanation: thats it
                    isOX: false
                    choices:
                      - index: 1
                        content: a
                      - index: 2
                        content: b
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  username:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
                example:
                  title: easy questions
                  username: kimcoding
                  createdAt: 2021-12-18 22:51:20
                  updatedAt: 2021-12-19 22:51:20
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: insufficient information

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: invalid user
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: duplicate information
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
  /solveStatus:
    post:
      tags:
        - search && sets
      summary: solve set
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                solver:
                  type: string
                problemId:
                  type: number
                choice:
                  type: number
              required:
                - problemId
                - choice
              example:
                solver: 'kimcoding@naver.com'
                title: 1
                choice: 2
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  solver:
                    type: string
                  selectionRate:
                    type: array
                example:
                  id: 1
                  username: 'kimcoding@naver.com'
                  selectionRate: ['10', '20', '30', '40']
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: insufficient information
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
  /solvedSets:
    post:
      tags:
        - search && sets
      summary: submit set
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                setId:
                  type: number
                userRate:
                  type: number
              required:
                - setId
                - userRate
              example:
                setId: 1
                userRate: 50
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                example:
                  id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: insufficient information
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: internal server error
